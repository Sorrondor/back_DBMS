CREATE SEQUENCE SEQ_USER;
CREATE TABLE TBL_USER(
	ID NUMBER CONSTRAINT PK_USER PRIMARY KEY,
	USER_EMAIL VARCHAR2(255) NOT NULL UNIQUE,
	USER_PASSWORD VARCHAR2(255) NOT NULL,
	USER_ADDRESS VARCHAR2(255),
	USER_BIRTH DATE
);
CREATE SEQUENCE SEQ_POST;
CREATE TABLE TBL_POST(
	ID NUMBER CONSTRAINT PK_POST PRIMARY KEY,
	POST_TITLE VARCHAR2(255),
	POST_CONTENT VARCHAR2(255),
	USER_ID NUMBER,
	CONSTRAINT FK_POST_USER FOREIGN KEY(USER_ID)
	REFERENCES TBL_USER(ID)
);
CREATE SEQUENCE SEQ_REPLY;
CREATE TABLE TBL_REPLY(
	ID NUMBER CONSTRAINT PK_REPLY PRIMARY KEY,
	REPLY_CONTENT VARCHAR2(255),
	USER_ID NUMBER,
	POST_ID NUMBER,
	CONSTRAINT FK_REPLY_USER FOREIGN KEY(USER_ID)
	REFERENCES TBL_USER(ID),
	CONSTRAINT FK_REPLY_POST FOREIGN KEY(POST_ID)
	REFERENCES TBL_POST(ID)
);

INSERT INTO TBL_USER
VALUES(SEQ_USER.NEXTVAL, 'hgd1234@gmail.com', '1234', '서울시 강남구', '2002-07-15');
INSERT INTO TBL_USER
VALUES(SEQ_USER.NEXTVAL, 'jbg1234@gmail.com', '1234', '경기도 성남시', '1995-01-23');
INSERT INTO TBL_USER
VALUES(SEQ_USER.NEXTVAL, 'lssd1234@gmail.com', '1234', '수원시 팔달구', '1998-03-01');
INSERT INTO TBL_USER
VALUES(SEQ_USER.NEXTVAL, 'kyh1234@gmail.com', '1234', '서울시 마포구', '2002-07-15');
INSERT INTO TBL_USER
VALUES(SEQ_USER.NEXTVAL, 'kcs1234@gmail.com', '1234', '서울시 동작구', '2002-07-15');
INSERT INTO TBL_USER
VALUES(SEQ_USER.NEXTVAL, 'cjs1234@gmail.com', '1234', '화성시 동탄', '2002-02-18');

INSERT INTO TBL_POST 
VALUES(SEQ_POST.NEXTVAL, '이승찬 맥북 갖다버려!', '컴퓨터는 역시 그램', 1);
INSERT INTO TBL_POST 
VALUES(SEQ_POST.NEXTVAL, '배승원 카드놀이 좀 그만해', '알탭 천재 배승원', 2);
INSERT INTO TBL_POST 
VALUES(SEQ_POST.NEXTVAL, '마우스 뭐가 좋아요?', '마우스가 고장났는데, 새로 사고 싶어요', 3);
INSERT INTO TBL_POST 
VALUES(SEQ_POST.NEXTVAL, '100만원으로 살 수 있는 컴퓨터 추천 좀', '기존의 컴퓨터 고장났어요', 5);
INSERT INTO TBL_POST 
VALUES(SEQ_POST.NEXTVAL, '아직 다 못 썼어요', '제가 안 썼어요! 저는 몰라요!', 2);
INSERT INTO TBL_POST 
VALUES(SEQ_POST.NEXTVAL, '레전드 네버 다이', '나는야 페이커', 1);

-- 댓글
INSERT INTO TBL_REPLY
VALUES(SEQ_REPLY.NEXTVAL, '한민이형 감히', 6, 1);
INSERT INTO TBL_REPLY
VALUES(SEQ_REPLY.NEXTVAL, '한민이형 넌 별것도 아니야', 6, 3);
INSERT INTO TBL_REPLY
VALUES(SEQ_REPLY.NEXTVAL, '한민이형은 나의 도구', 6, 4);
INSERT INTO TBL_REPLY
VALUES(SEQ_REPLY.NEXTVAL, '한민이형 밥 좀 사줘요.', 6, 5);
INSERT INTO TBL_REPLY
VALUES(SEQ_REPLY.NEXTVAL, '그램보단 콩순이', 2, 1);
INSERT INTO TBL_REPLY
VALUES(SEQ_REPLY.NEXTVAL, '갤럭시 북 세일할 때 사세요~', 1, 4);
INSERT INTO TBL_REPLY
VALUES(SEQ_REPLY.NEXTVAL, '와 진짜 저건 저항받겠다. 인성 ㄷㄷ', 3, 2);
INSERT INTO TBL_REPLY
VALUES(SEQ_REPLY.NEXTVAL, '맥북 에어 사세요^_^', 4, 4);
INSERT INTO TBL_REPLY
VALUES(SEQ_REPLY.NEXTVAL, '한민이형 질문 좀 해도 될까요?', 6, 1);

SELECT * FROM TBL_USER;
SELECT * FROM TBL_POST;
SELECT * FROM TBL_REPLY;

SELECT TP.ID, TP.POST_TITLE, TU.USER_EMAIL
FROM TBL_POST TP
JOIN TBL_USER TU
ON TP.USER_ID = TU.ID
ORDER BY ID DESC;

-- 댓글을 단 사용자
SELECT TR.REPLY_CONTENT, TU.USER_EMAIL
FROM TBL_REPLY TR
JOIN TBL_USER TU
ON TR.USER_ID = TU.ID;

/*
 * SQL의 실행 순서
 * FROM > JOIN > ON > WHERE > GROUP BY > HAVING > SELECT > ORDER BY
 * */

-- 구매자
-- 이름, 나이, 성별, 주소, 핸드폰
CREATE SEQUENCE SEQ_BUYER;
CREATE TABLE TBL_BUYER(
   ID NUMBER CONSTRAINT PK_BUYER PRIMARY KEY,
   BUYER_NAME VARCHAR2(255) NOT NULL,
   BUYER_AGE NUMBER,
   BUYER_GENDER CHAR(10) CHECK (BUYER_GENDER IN ('남', '여')),
   BUYER_ADDRESS VARCHAR2(255),
   BUYER_PHONE VARCHAR2(255)
);

-- 상품
-- 브랜드, 이름, 가격, 재고
CREATE SEQUENCE SEQ_PRODUCT;
CREATE TABLE TBL_PRODUCT(
   ID NUMBER CONSTRAINT PK_PRODUCT PRIMARY KEY,
   PRODUCT_BRAND VARCHAR2(255) NOT NULL,
   PRODUCT_NAME VARCHAR2(255) NOT NULL,
   PRODUCT_PRICE NUMBER,
   PRODUCT_STOCK NUMBER DEFAULT 999
);

-- 주문 
-- 주문 상태, 주문 일자, 주문 완료 일자
CREATE SEQUENCE SEQ_ORDER;
CREATE TABLE TBL_ORDER(
   ID NUMBER CONSTRAINT PK_ORDER PRIMARY KEY,
   ORDER_STATUS VARCHAR2(255) DEFAULT '배송중',
   ORDER_START_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
   ORDER_END_DATE TIMESTAMP,
   BUYER_ID NUMBER,
   PRODUCT_ID NUMBER,
   CONSTRAINT FK_ORDER_BUYER FOREIGN KEY(BUYER_ID)
   REFERENCES TBL_BUYER(ID),
   CONSTRAINT FK_OUDER_PRODUCT FOREIGN KEY(PRODUCT_ID)
   REFERENCES TBL_PRODUCT(ID)
);

-- 이름, 나이, 성별, 주소, 핸드폰
INSERT INTO TBL_BUYER
VALUES (SEQ_BUYER.NEXTVAL, '짱구', 40, '남', '서울시 강남구', '010-3344-1234');
INSERT INTO TBL_BUYER
VALUES (SEQ_BUYER.NEXTVAL, '유리', 20, '여', '서울시 종로구', '010-7848-5656');
INSERT INTO TBL_BUYER
VALUES (SEQ_BUYER.NEXTVAL, '맹구', 35, '남', '서울시 노원구', '010-1313-7854');
INSERT INTO TBL_BUYER
VALUES (SEQ_BUYER.NEXTVAL, '철수', 30, '남', '서울시 용산구', '010-5533-7711');
INSERT INTO TBL_BUYER
VALUES (SEQ_BUYER.NEXTVAL, '훈이', 20, '남', '경기도 남양주시', '010-1234-5678');
INSERT INTO TBL_BUYER
VALUES (SEQ_BUYER.NEXTVAL, '수지', 40, '여', '서울시 강북구', '010-4542-8753');
INSERT INTO TBL_BUYER
VALUES (SEQ_BUYER.NEXTVAL, '봉미선', 50, '여', '서울시 강북구', '010-3456-7575');
INSERT INTO TBL_BUYER
VALUES (SEQ_BUYER.NEXTVAL, '이태희', 20, '여', '서울시 스카이캐슬', '010-7345-1578');


-- 상품
-- 브랜드, 이름, 가격, 재고
INSERT INTO TBL_PRODUCT
VALUES(SEQ_PRODUCT.NEXTVAL, '뉴발란스', '브리즈 신발', 139000, 500);
INSERT INTO TBL_PRODUCT
VALUES(SEQ_PRODUCT.NEXTVAL, '아디다스', '후드집업', 119000, 250);
INSERT INTO TBL_PRODUCT
VALUES(SEQ_PRODUCT.NEXTVAL, '아크테릭스', '후드티', 290000, 100);
INSERT INTO TBL_PRODUCT
VALUES(SEQ_PRODUCT.NEXTVAL, '로라로라', '반팔티셔츠', 38700, 600);
INSERT INTO TBL_PRODUCT
VALUES(SEQ_PRODUCT.NEXTVAL, '엠엘비', '볼캡', 49000, 30);
INSERT INTO TBL_PRODUCT
VALUES(SEQ_PRODUCT.NEXTVAL, '무신사', '스웨이드 가디건', 95890, 170);
INSERT INTO TBL_PRODUCT
VALUES(SEQ_PRODUCT.NEXTVAL, '스웨이드', '청바지', 57600, 310);
INSERT INTO TBL_PRODUCT
VALUES(SEQ_PRODUCT.NEXTVAL, '스파오', '반팔티셔츠', 25900, 120);
INSERT INTO TBL_PRODUCT
VALUES(SEQ_PRODUCT.NEXTVAL, '아이더', '캐시미어 자켓', 618420, 50);
INSERT INTO TBL_PRODUCT
VALUES(SEQ_PRODUCT.NEXTVAL, '스탠리', '텀블러', 62000, 550);


-- 오더
-- 주문 상태, 주문 일자, 주문 완료 일자
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 1, 7);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 2, 3);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 3, 3);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 3, 5);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 4, 1);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 4, 7);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 4, 3);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 4, 2);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 5, 1);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 5, 7);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 5, 9);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 5, 10);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 6, 10);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 7, 8);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 7, 1);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 7, 3);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 7, 5);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 7, 4);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 7, 6);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 7, 8);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 8, 1);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 8, 2);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 8, 3);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 2, 5);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 2, 3);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 5, 4);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 3, 3);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 3, 8);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 1, 10);
INSERT INTO TBL_ORDER(ID, BUYER_ID, PRODUCT_ID)
VALUES(SEQ_ORDER.NEXTVAL, 3, 10);

SELECT *
FROM TBL_ORDER;

-- 주문자 정보 조회
-- 주문 날짜, 사용자의 이름
SELECT TBO.ORDER_START_DATE, TBB.BUYER_NAME
FROM TBL_ORDER TBO
JOIN TBL_BUYER TBB
ON TBO.BUYER_ID = TBB.ID;

-- 가장 인기 많은 상품을 구매한
-- 사용자의 정보와 상품 이름을 조회
SELECT *
FROM TBL_BUYER
WHERE ID IN
	(
	SELECT TBO.BUYER_ID
	FROM TBL_ORDER TBO
	JOIN TBL_PRODUCT TBP
	ON TBO.PRODUCT_ID = TBP.ID
	WHERE PRODUCT_NAME = (
			SELECT PRODUCT_NAME
			FROM (
				SELECT PRODUCT_NAME
				FROM TBL_PRODUCT TBP
				JOIN TBL_ORDER TBO
				ON TBP.ID = TBO.PRODUCT_ID
				GROUP BY PRODUCT_NAME
				ORDER BY COUNT(PRODUCT_NAME) DESC
			)
			WHERE ROWNUM = 1
		)
	);

SELECT PRODUCT_NAME
FROM (
	SELECT PRODUCT_NAME
	FROM TBL_PRODUCT TBP
	JOIN TBL_ORDER TBO
	ON TBP.ID = TBO.PRODUCT_ID
	GROUP BY PRODUCT_NAME
	ORDER BY COUNT(PRODUCT_NAME) DESC
)
WHERE ROWNUM = 1;

-- 1) 상품 이름과 총 판매 매출 조회
SELECT
	TBO.PRODUCT_ID AS "상품 번호",
	TBP.PRODUCT_NAME AS "상품 이름",
	COUNT(TBO.PRODUCT_ID)*TBP.PRODUCT_PRICE || '원' AS "총 판매 매출"
FROM TBL_ORDER TBO
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID
GROUP BY PRODUCT_ID, TBP.PRODUCT_NAME, TBP.PRODUCT_PRICE 
ORDER BY PRODUCT_ID;

-- 2) 상품을 구매한 20 ~ 30대 구매자의 수 조회
SELECT
	TBO.PRODUCT_ID AS "상품번호",
	TBP.PRODUCT_NAME AS "상품이름",
	COUNT(TBO.PRODUCT_ID) AS "구매한 20 ~ 30대 구매자의 수"
FROM TBL_ORDER TBO
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID
WHERE BUYER_ID IN (
	SELECT ID
	FROM TBL_BUYER
	WHERE BUYER_AGE < 40
	AND BUYER_AGE > 20
)
GROUP BY PRODUCT_ID, PRODUCT_NAME;

-- 3) 뉴발란스를 구매한 20대 구매자의 이름 조회
SELECT TBB.BUYER_NAME AS "뉴발란스를 구매한 20대 구매자의 이름"
FROM TBL_BUYER TBB
JOIN TBL_ORDER TBO
ON TBB.ID = TBO.BUYER_ID
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID 
WHERE TBB.BUYER_AGE >= 20
AND TBB.BUYER_AGE < 30
AND TBP.PRODUCT_BRAND = '뉴발란스';

--4) 여성의 나이대별 평균 지출 금액 조회
SELECT
	TBB.BUYER_AGE AS "나이대",
	ROUND(AVG(TBP.PRODUCT_PRICE)) || '원' AS "평균 지출 금액"
FROM TBL_BUYER TBB
JOIN TBL_ORDER TBO
ON TBB.ID = TBO.BUYER_ID
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID 
WHERE BUYER_GENDER = '여'
GROUP BY TBB.BUYER_AGE;

--5) 쇼핑몰의 총 판매 액수 조회
SELECT SUM(TBP.PRODUCT_PRICE) || '원' AS "쇼핑몰의 총 판매 액수"
FROM TBL_ORDER TBO
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID;

--6) 가장 매출이 적은 상품을 구매한 사용자의 이름과, 상품명 조회 RET
SELECT TBU.BUYER_NAME, TBP.PRODUCT_NAME
FROM TBL_ORDER TBO
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID
JOIN TBL_BUYER TBU
ON TBO.BUYER_ID = TBU.ID
WHERE PRODUCT_ID = (
   SELECT ID
   FROM (
      SELECT TBP.ID
      FROM TBL_ORDER TBO
      JOIN TBL_PRODUCT TBP
      ON TBO.PRODUCT_ID = TBP.ID
      JOIN TBL_BUYER TBU
      ON TBO.BUYER_ID = TBU.ID
      GROUP BY TBP.ID, TBP.PRODUCT_BRAND, TBP.PRODUCT_PRICE
      ORDER BY SUM(TBP.PRODUCT_PRICE)
   )
   WHERE ROWNUM = 1
);

--7) 경기도에 거주한 사람이 구매한 상품과, 사용자 정보를 조회
SELECT
	TBB.*,
	TBP.PRODUCT_NAME AS "구매한 상품"
FROM TBL_BUYER TBB
JOIN TBL_ORDER TBO
ON TBB.ID = TBO.BUYER_ID
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID
WHERE BUYER_ADDRESS LIKE('경기도%');

--8) 30대 남성이 가장 많이 구매한 상품의 이름 조회
SELECT PRODUCT_NAME AS "30대 남성이 가장 많이 구매한 상품의 이름"
FROM (
	SELECT PRODUCT_ID, COUNT(PRODUCT_ID), TBP.PRODUCT_NAME
	FROM TBL_ORDER TBO
	JOIN TBL_PRODUCT TBP
	ON TBO.PRODUCT_ID = TBP.ID
	WHERE BUYER_ID IN (
		SELECT ID
		FROM TBL_BUYER
		WHERE BUYER_AGE >= 30
		AND BUYER_AGE < 40
		AND BUYER_GENDER = '남'
	)
	GROUP BY TBO.PRODUCT_ID, TBP.PRODUCT_NAME
	ORDER BY COUNT(PRODUCT_ID) DESC
)
WHERE ROWNUM = 1;

--9) 가장 적게 판매된 상품의 이름
SELECT PRODUCT_NAME AS "가장 적게 판매된 상품의 이름"
FROM TBL_PRODUCT
WHERE ID IN (
	SELECT PRODUCT_ID
	FROM(
		SELECT PRODUCT_ID, COUNT(PRODUCT_ID)
		FROM TBL_ORDER
		GROUP BY PRODUCT_ID
		ORDER BY COUNT(PRODUCT_ID)
	)
	WHERE ROWNUM <= 2
);

--10) 평균 나이보다 많은 사용자들이 구매한 상품과 사용자의 정보 조회
SELECT
	TBP.PRODUCT_NAME AS "평균 나이보다 많은 사용자들이 구매한 상품",
	TBB.*
FROM TBL_BUYER TBB
JOIN TBL_ORDER TBO
ON TBB.ID = TBO.BUYER_ID
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID 
WHERE BUYER_AGE > (
	SELECT AVG(BUYER_AGE)
	FROM TBL_BUYER
);

--11) 20대 여성이 구매한 상품 이름과 주문 건수 조회
SELECT
	TBP.PRODUCT_NAME AS "20대 여성이 구매한 상품 이름",
	COUNT(TBP.PRODUCT_NAME) || '회' AS "주문 건수"
FROM TBL_BUYER TBB
JOIN TBL_ORDER TBO
ON TBB.ID = TBO.BUYER_ID
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID 
WHERE BUYER_AGE >= 20
AND BUYER_AGE < 30
AND BUYER_GENDER = '여'
GROUP BY TBP.PRODUCT_NAME;

--12) 가장 인기가 없는 상품 조회
SELECT *
FROM TBL_PRODUCT
WHERE ID = (
	SELECT PRODUCT_ID
	FROM (
		SELECT PRODUCT_ID, COUNT(PRODUCT_ID)
		FROM TBL_ORDER
		GROUP BY PRODUCT_ID
		ORDER BY COUNT(PRODUCT_ID)
	)
	WHERE ROWNUM = 1
);