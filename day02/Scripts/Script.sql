-- 동물 테이블
-- 이름, 나이, 색
CREATE SEQUENCE SEQ_ANIMAL
START WITH 1
INCREMENT BY 10;
CREATE TABLE TBL_ANIMAL(
	ID NUMBER CONSTRAINT PK_ANIMAL PRIMARY KEY,
	ANIMAL_NAME VARCHAR2(255) NOT NULL UNIQUE,
	ANIMAL_AGE NUMBER DEFAULT 0,
	ANIMAL_COLOR VARCHAR2(255)
);

INSERT INTO TBL_ANIMAL
CREATE SEQUENCE SEQ_ANIMAL
START WITH 1
INCREMENT BY 10;
CREATE TABLE TBL_ANIMAL(
	ID NUMBER CONSTRAINT PK_ANIMAL PRIMARY KEY,
	ANIMAL_NAME VARCHAR2(255) NOT NULL UNIQUE,
	ANIMAL_AGE NUMBER DEFAULT 0,
	ANIMAL_COLOR VARCHAR2(255)
-- 단, FK키가 참조하고 있는 경우 삭제할 수 없다.
-- DROP CONSTRAINT: 제약조건 삭제
ALTER TABLE TBL_PET DROP CONSTRAINT PK_ANIMAL;
);
VALUES(SEQ_ANIMAL.NEXTVAL, '강아지', 5, '갈색');
INSERT INTO TBL_ANIMAL
VALUES(SEQ_ANIMAL.NEXTVAL, '갱얼쥐', 5, '좡색');

SELECT * FROM TBL_ANIMAL;

-- 컬럼 이름 변경
-- RENAME A TO B : 테이블의 이름을 변경
-- RENAME COLUMN A TO B : 테이블의 컬럼 이름 변경
ALTER TABLE TBL_ANIMAL RENAME COLUMN ANIMAL_NAME TO ANIMAL_SPECIES;
RENAME TBL_ANIMAL TO TBL_PET;
RENAME SEQ_ANIMAL TO SEQ_PET;

SELECT * FROM TBL_PET;

-- 테이블이 바뀌면 컬럼명도 모두 바꿔야한다.
ALTER TABLE TBL_PET RENAME COLUMN ANIMAL_SPECIES TO PET_SPECIES;

-- PK는 이름을 바로 바꿀 수 없다.
-- PK를 삭제하고, 다시 추가해야 한다.

-- 추가
ALTER TABLE TBL_PET ADD CONSTRAINT PK_PET PRIMARY KEY(ID);

DROP TABLE TBL_PET;

CREATE SEQUENCE SEQ_ANIMAL
START WITH 1
INCREMENT BY 10;
CREATE TABLE TBL_ANIMAL(
	ID NUMBER,
	ANIMAL_NAME VARCHAR2(255) NOT NULL UNIQUE,
	ANIMAL_AGE NUMBER DEFAULT 0,
	ANIMAL_COLOR VARCHAR2(255)
	CONSTRAINT PK_ANIMAL PRIMARY KEY(ID)
);

-- 자동차 테이블
-- 자동차 번호
-- 자동차 브랜드
-- 자동차 출시 날짜
-- 색상
-- 가격
CREATE SEQUENCE SEQ_CAR;
CREATE TABLE TBL_CAR(
	ID NUMBER CONSTRAINT PK_CAR PRIMARY KEY,
	CAR_NUMBER VARCHAR2(255) NOT NULL UNIQUE,
	CAR_BRAND VARCHAR2(255),
	CAR_DATE VARCHAR2(255),
	CAR_COLOR VARCHAR2(255),
	CAR_PRICE NUMBER DEFAULT 0
);

INSERT INTO TBL_CAR
VALUES(SEQ_CAR.NEXTVAL, '0853', '기아', '25/3/25', '검은색', 100000);

-- 유저 테이블, 게시글 테이블
CREATE TABLE TBL_USER(
	ID NUMBER CONSTRAINT PK_USER PRIMARY KEY,
	USER_NAME VARCHAR2(255),
	USER_AGE NUMBER
);
CREATE SEQUENCE SEQ_POST;
CREATE TABLE TBL_POST(
	ID NUMBER CONSTRAINT PK_POST PRIMARY KEY,
	POST_TITLE VARCHAR2(255) NOT NULL,
	POST_CONTENT VARCHAR2(255) NOT NULL,
	USER_ID NUMBER,
	CONSTRAINT FK_POST_USER FOREIGN KEY(USER_ID)
	REFERENCES TBL_USER(ID)
);

-- 요구사항
-- 회사에서 광고를 여러개 신청하려고 합니다.
-- 회사, 광고, 신청 테이블을 만들어주세요.
CREATE SEQUENCE SEQ_COMPANY;
CREATE TABLE TBL_COMPANY(
   ID NUMBER CONSTRAINT PK_COMPANY PRIMARY KEY,
   COMPANY_NAME VARCHAR2(255) NOT NULL UNIQUE,
   COMPANY_PHONE VARCHAR2(255) NOT NULL,
   COMPANY_ADDRESS VARCHAR(255)
);

CREATE SEQUENCE SEQ_ADVER;
CREATE TABLE TBL_ADVER(
   ID NUMBER CONSTRAINT PK_ADVER PRIMARY KEY,
   ADVER_TITLE VARCHAR2(255),
   ADVER_CONTENT VARCHAR2(255)
);

CREATE SEQUENCE SEQ_ADVER_FORM;
CREATE TABLE TBL_ADVER_FORM(
   ID NUMBER CONSTRAINT PK_ADVER_FORM PRIMARY KEY,
   COMPANY_ID NUMBER,
   ADVER_ID NUMBER,
   CONSTRAINT FK_ADVER_FORM_COMPANY FOREIGN KEY(COMPANY_ID)
   REFERENCES TBL_COMPANY(ID),
   CONSTRAINT FK_ADVER_FROM_ADVER FOREIGN KEY(ADVER_ID)
   REFERENCES TBL_ADVER(ID)
);

-- 요구사항
-- 회원이 존재하고 회원은 여러 상품을 구매할 수 있습니다.
-- 데이터 베이스를 만들어주세요.
CREATE SEQUENCE SEQ_MEMBER;
CREATE TABLE TBL_MEMBER(
	ID NUMBER CONSTRAINT PK_MEMBER PRIMARY KEY,
	NAME VARCHAR2(255) NOT NULL UNIQUE
);
CREATE SEQUENCE SEQ_PRODUCT;
CREATE TABLE TBL_PRODUCT(
	ID NUMBER CONSTRAINT PK_PRODUCT PRIMARY KEY,
	NAME VARCHAR2(255) NOT NULL UNIQUE
);
CREATE SEQUENCE SEQ_BUY;
CREATE TABLE TBL_BUY(
	ID NUMBER CONSTRAINT PK_BUY PRIMARY KEY,
	MEMBER_ID NUMBER,
	PRODUCT_ID NUMBER,
	CONSTRAINT FK_BUY_MEMBER FOREIGN KEY(MEMBER_ID)
	REFERENCES TBL_MEMBER,
	CONSTRAINT FK_BUT_PRODUCT FOREIGN KEY(PRODUCT_ID)
	REFERENCES TBL_PRODUCT
);

-- 요구사항
-- 상품 판매자(TBL_SELLER)가 상품 구매자(TBL_BUYER)에게
-- 배송(TBL_DELEVERY)을 할 수 있는 기능이 필요해요.
-- 판매자: 음료, 음료 종류, 음료 크기, 만든 날짜
-- 구매자: 이름, 전화번호, 주소
-- 배송?
CREATE SEQUENCE SEQ_SELLER;
CREATE TABLE TBL_SELLER(
	ID NUMBER CONSTRAINT PK_SELLER PRIMARY KEY,
	SELLER_NAME VARCHAR2(255),
	SELLER_TYPE VARCHAR2(255),
	SELLER_SIZE VARCHAR2(255),
	SELLER_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE SEQUENCE SEQ_BUYER;
CREATE TABLE TBL_BUYER(
	ID NUMBER CONSTRAINT PK_BUYER PRIMARY KEY,
	BUYER_NAME VARCHAR2(255),
	BUYER_PHONE VARCHAR2(255),
	BUYER_ADDRESS VARCHAR2(255)
);
CREATE SEQUENCE SEQ_DELEVERY;
CREATE TABLE TBL_DELEVERY(
	ID NUMBER CONSTRAINT PK_DELEVERY PRIMARY KEY,
	SELLER_ID NUMBER,
	BUYER_ID NUMBER,
	CONSTRAINT FK_DELEVERY_SELLER FOREIGN KEY(SELLER_ID)
	REFERENCES TBL_SELLER,
	CONSTRAINT FK_DELEVERY_BUYER FOREIGN KEY(BUYER_ID)
	REFERENCES TBL_BUYER
);

-- 사용자(TBL_GOODS_USER)
-- 굿즈(TBL_GOODS)
-- 선물하기(TBL_GIFTS)
-- 사용자:이름, 연락처, 주소
-- 굿즈:상품멸, 가격, 재고, 제작시간
CREATE SEQUENCE SEQ_GOODS_USER;
CREATE TABLE TBL_GOODS_USER(
	ID NUMBER CONSTRAINT PK_GOODS_USER PRIMARY KEY,
	GOODS_USER_NAME VARCHAR2(255) NOT NULL,
	GOODS_USER_PHONE VARCHAR2(255) UNIQUE,
	GOODS_USER_ADDRESS VARCHAR2(255)
);
CREATE SEQUENCE SEQ_GOODS;
CREATE TABLE TBL_GOODS(
	ID NUMBER CONSTRAINT PK_GOODS PRIMARY KEY,
	GOODS_NAME VARCHAR2(255) NOT NULL,
	GOODS_PRICE NUMBER NOT NULL,
	GOODS_STOCK NUMBER DEFAULT 0,
	GOODS_TIME VARCHAR2(255)
);
CREATE SEQUENCE SEQ_GIFTS;
CREATE TABLE TBL_GIFTS(
	ID NUMBER CONSTRAINT PK_GIFTS PRIMARY KEY,
	GOODS_USER_ID NUMBER,
	GOODS_ID NUMBER,
	CONSTRAINT FK_GIFTS_GOODS_USER FOREIGN KEY(GOODS_USER_ID)
	REFERENCES TBL_GOODS_USER,
	CONSTRAINT FK_GIFTS_GOODS FOREIGN KEY(GOODS_ID)
	REFERENCES TBL_GOODS
);

/*
요구사항
   유치원을 하려고 하는데, 아이들이 체험학습 프로그램을 신청해야 합니다.
   아이들 정보는 이름, 나이, 성별이 필요하고 학부모는 이름, 나이, 주소, 전화번호, 성별이 필요해요
   체험학습은 체험학습 제목, 체험학습 내용, 이벤트 이미지 여러 장이 필요합니다.
   아이들은 여러 번 체험학습에 등록할 수 있어요.
*/
CREATE SEQUENCE SEQ_CHILD;
CREATE TABLE TBL_CHILD(
	ID NUMBER CONSTRAINT PK_CHILD PRIMARY KEY,
	CHILD_NAME VARCHAR2(255) NOT NULL,
	CHILD_AGE NUMBER NOT NULL,
	CHILD_GENDER CHAR(5) NOT NULL
);
CREATE SEQUENCE SEQ_PARENT;
CREATE TABLE TBL_PARENT(
	ID NUMBER CONSTRAINT PK_PARENT PRIMARY KEY,
	PARENT_NAME VARCHAR2(255) NOT NULL,
	PARENT_AGE NUMBER NOT NULL,
	PARENT_ADDRESS VARCHAR2(255),
	PARENT_PHONE VARCHAR2(255),
	PARENT_GENDER CHAR(5)
);
CREATE SEQUENCE SEQ_PROGRAM;
CREATE TABLE TBL_PROGRAM(
	ID NUMBER CONSTRAINT PK_PROGRAM PRIMARY KEY,
	NAME VARCHAR2(255) NOT NULL,
	CHILD_ID NUMBER,
	CONSTRAINT FK_PROGRAM_CHILD FOREIGN KEY(CHILD_ID)
	REFERENCES TBL_CHILD
);
CREATE SEQUENCE SEQ_FAMILY;
CREATE TABLE TBL_FAMILY(
	ID NUMBER CONSTRAINT PK_FAMILY PRIMARY KEY,
	CHILD_ID NUMBER,
	PARENT_ID NUMBER,
	CONSTRAINT FK_FAMILY_CHILD FOREIGN KEY(CHILD_ID)
	REFERENCES TBL_CHILD,
	CONSTRAINT FK_FAMILY_PARENT FOREIGN KEY(PARENT_ID)
	REFERENCES TBL_PARENT
);

/*

요구사항

안녕하세요, 광고 회사를 운영하려고 준비중인 사업가입니다.
광고주는 기업이고 기업 정보는 이름, 주소, 대표번호, 기업종류(스타트업, 중소기업, 중견기업, 대기업)입니다.
광고는 제목, 내용이 있고 기업은 여러 광고를 신청할 수 있습니다.
기업이 광고를 선택할 때에는 카테고리로 선택하며, 대카테고리, 중카테고리, 소카테고리가 있습니다.

*/
CREATE SEQUENCE SEQ_COMPANY;
CREATE TABLE TBL_COMPANY(
	ID NUMBER CONSTRAINT PK_COMPANY PRIMARY KEY,
	COMPANY_NAME VARCHAR2(255),
	COMPANY_ADDRESS VARCHAR2(255),
	COMPANY_PHONE VARCHAR2(255)
);
CREATE TABLE TBL_BIG_COMPANY(
	ID NUMBER CONSTRAINT PK_BIG_COMPANY PRIMARY KEY,
	COMPANY_ID NUMBER,
	CONSTRAINT FK_BIG_COMPANY_COMPANY FOREIGN KEY(COMPANY_ID)
	REFERENCES TBL_COMPANY
);
CREATE TABLE TBL_MIDDLE_COMPANY(
	ID NUMBER CONSTRAINT PK_MIDDLE_COMPANY PRIMARY KEY,
	COMPANY_ID NUMBER,
	CONSTRAINT FK_MIDDLE_COMPANY_COMPANY FOREIGN KEY(COMPANY_ID)
	REFERENCES TBL_COMPANY
);
CREATE TABLE TBL_SMALL_COMPANY(
	ID NUMBER CONSTRAINT PK_SMALL_COMPANY PRIMARY KEY,
	COMPANY_ID NUMBER,
	CONSTRAINT FK_SMALL_COMPANY_COMPANY FOREIGN KEY(COMPANY_ID)
	REFERENCES TBL_COMPANY
);
CREATE SEQUENCE SEQ_AD;
CREATE TABLE TBL_AD(
	ID NUMBER CONSTRAINT PK_AD PRIMARY KEY,
	AD_NAME VARCHAR2(255),
	AD_PRICE NUMBER,
	COMPANY_ID NUMBER,
	CONSTRAINT FK_AD_COMPANY FOREIGN KEY(COMPANY_ID)
	REFERENCES TBL_COMPANY
);
CREATE TABLE TBL_BIG_CAT(
	ID NUMBER CONSTRAINT PK_BIG_CAT PRIMARY KEY,
	AD_ID NUMBER,
	CONSTRAINT FK_BIG_CAT_AD FOREIGN KEY(AD_ID)
	REFERENCES TBL_AD
);
CREATE TABLE TBL_MIDDELE_CAT(
	ID NUMBER CONSTRAINT PK_MIDDLE_CAT PRIMARY KEY,
	BIG_CAT_ID NUMBER,
	CONSTRAINT FK_MIDDLE_CAT_BIG_CAT FOREIGN KEY(BIG_CAT_ID)
	REFERENCES TBL_BIG_CAT
);
CREATE TABLE TBL_SMALL_CAT(
	ID NUMBER CONSTRAINT PK_SMALL_CAT PRIMARY KEY,
	MIDDLE_CAT_ID NUMBER,
	CONSTRAINT FK_SMALL_CAT FOREIGN KEY(MIDDLE_CAT_ID)
	REFERENCES TBL_MIDDELE_CAT
);